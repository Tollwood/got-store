{"code":"import * as westerosCardData from './westeroscard.json';\r\nimport WesterosCard from '../../model/cards/westerosCard';\r\nimport CardFunction from '../../model/cards/cardFunction';\r\nimport { ALL_PHASES, GamePhase } from '../../model/gamePhase';\r\nvar CardFactory = /** @class */ (function () {\r\n    function CardFactory() {\r\n    }\r\n    CardFactory.shuffle = function (cards) {\r\n        for (var i = cards.length; i; i--) {\r\n            var j = Math.floor(Math.random() * i);\r\n            _a = [cards[j], cards[i - 1]], cards[i - 1] = _a[0], cards[j] = _a[1];\r\n        }\r\n        var _a;\r\n    };\r\n    CardFactory.getWesterosCards = function () {\r\n        var _this = this;\r\n        var cards = new Map();\r\n        cards.set(GamePhase.WESTEROS1, []);\r\n        cards.set(GamePhase.WESTEROS2, []);\r\n        cards.set(GamePhase.WESTEROS3, []);\r\n        westerosCardData.forEach(function (jsonCard) {\r\n            var gamePhase = jsonCard.gamePhase;\r\n            var count = westerosCards[ALL_PHASES.lastIndexOf(gamePhase)].filter(function (cardId) {\r\n                return cardId === jsonCard.id;\r\n            }).length;\r\n            for (var i = 0; i < count; i++) {\r\n                cards.get(gamePhase).push(_this.parseWesterosCards(jsonCard));\r\n            }\r\n        });\r\n        cards.forEach(function (cards) { return _this.shuffle(cards); });\r\n        return cards;\r\n    };\r\n    CardFactory.parseWesterosCards = function (json) {\r\n        var cardFunctions = new Array();\r\n        json.options.forEach(function (option) {\r\n            cardFunctions.push(new CardFunction(option.functionName, option.description));\r\n        });\r\n        return new WesterosCard(json.id, json.title, json.description, json.artwork, json.gamePhase, json.wildling, cardFunctions);\r\n    };\r\n    return CardFactory;\r\n}());\r\nexport default CardFactory;\r\nvar westerosCards = [\r\n    [1, 2, 2, 3, 3, 3, 4, 4, 4, 5],\r\n    [6, 6, 7, 8, 8, 8, 9, 9, 9, 10],\r\n    [11, 11, 12, 13, 14, 15, 15, 15, 16, 17]\r\n];\r\n//# sourceMappingURL=cardFactory.js.map","map":{"version":3,"file":"cardFactory.js","sourceRoot":"","sources":["cardFactory.ts"],"names":[],"mappings":"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"},"dts":{"name":"/Users/taamato1/pdev/got-store/src/logic/cards/cardFactory.d.ts","text":"import WesterosCard from '../../model/cards/westerosCard';\r\nimport { GamePhase } from '../../model/gamePhase';\r\nexport default class CardFactory {\r\n    static shuffle(cards: Array<any>): void;\r\n    static getWesterosCards(): Map<GamePhase, WesterosCard[]>;\r\n    private static parseWesterosCards(json);\r\n}\r\n"}}
