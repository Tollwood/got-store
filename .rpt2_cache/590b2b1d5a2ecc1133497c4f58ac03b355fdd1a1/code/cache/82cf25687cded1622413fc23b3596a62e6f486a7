{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ALL_PHASES, GamePhase } from '../model/gamePhase';\r\nimport VictoryRules from './victoryRules';\r\nimport PlayerStateModificationService from './gameState/playerStateModificationService';\r\nimport AreaModificationService from './gameState/areaStateModificationService';\r\nimport GameStateModificationService from './gameState/gameStateModificationService';\r\nimport StateSelectorService from '../selector/stateSelectorService';\r\nvar GamePhaseService = /** @class */ (function () {\r\n    function GamePhaseService() {\r\n    }\r\n    GamePhaseService.getNextPhase = function (state, updatedAreas) {\r\n        return this.getNextGamePhaseWithPendingActions(updatedAreas, state.gamePhase);\r\n    };\r\n    GamePhaseService.getNextHouse = function (state, nextGamePhase, lastSourceAreaKey) {\r\n        if (state.gamePhase === nextGamePhase) {\r\n            return this.getNextHouseWithPendingActions(state.ironThroneSuccession, Array.from(state.areas.values()), nextGamePhase, lastSourceAreaKey, this.nextHouse(state.ironThroneSuccession, state.currentHouse));\r\n        }\r\n        return state.ironThroneSuccession[0];\r\n    };\r\n    GamePhaseService.cleanupBoard = function (state) {\r\n        if (state.gamePhase === GamePhase.ACTION_CLEANUP) {\r\n            var winningHouse = VictoryRules.getWinningHouse(state);\r\n            return tslib_1.__assign({}, state, { areas: AreaModificationService.removeAllRemainingTokens(Array.from(state.areas.values())), players: PlayerStateModificationService.executeAllConsolidatePowerOrders(state.players, Array.from(state.areas.values())), gamePhase: GamePhase.WESTEROS1, gameRound: state.gameRound + 1, winningHouse: winningHouse, currentHouse: StateSelectorService.getFirstFromIronThroneSuccession(state), currentlyAllowedTokenTypes: GameStateModificationService.INITIALLY_ALLOWED_ORDER_TOKEN_TYPES });\r\n        }\r\n        return state;\r\n    };\r\n    // TODO should be integrated in the other two methods getNextPhase and getNextHouse\r\n    GamePhaseService.updateGamePhaseAfterRecruiting = function (state, areaKey) {\r\n        var nextHouseToRecruit = this.getNextHouseToRecruit(state, areaKey);\r\n        return {\r\n            currentHouse: nextHouseToRecruit !== null ? nextHouseToRecruit : state.ironThroneSuccession[0],\r\n            gamePhase: nextHouseToRecruit !== null ? state.gamePhase : this.getNextGamePhase(state.gamePhase),\r\n        };\r\n    };\r\n    GamePhaseService.getNextGamePhase = function (currentGamePhase) {\r\n        var currentIndex = ALL_PHASES.lastIndexOf(currentGamePhase);\r\n        return ALL_PHASES.length === currentIndex ? ALL_PHASES[0] : ALL_PHASES[currentIndex + 1];\r\n    };\r\n    GamePhaseService.isStillIn = function (areas, gamePhase, house) {\r\n        switch (gamePhase) {\r\n            case GamePhase.PLANNING:\r\n                return !this.isPlanningPhaseComplete(areas);\r\n            case GamePhase.ACTION_RAID:\r\n                return !this.allRaidOrdersRevealed(areas, house);\r\n            case GamePhase.ACTION_MARCH:\r\n                return !this.allMarchOrdersRevealed(areas, house);\r\n            case GamePhase.ACTION_CLEANUP:\r\n                return areas.filter(function (area) {\r\n                    return area.orderToken;\r\n                }).length > 0;\r\n        }\r\n    };\r\n    GamePhaseService.allMarchOrdersRevealed = function (areas, house) {\r\n        return areas.filter(function (area) {\r\n            return area.orderToken && area.orderToken.isMoveToken() && (house === undefined || house === area.controllingHouse);\r\n        }).length === 0;\r\n    };\r\n    GamePhaseService.nextHouse = function (ironThroneSuccession, house) {\r\n        var currrentIndex = ironThroneSuccession.indexOf(house);\r\n        var nextIndex = ironThroneSuccession.length > currrentIndex + 1 ? currrentIndex + 1 : 0;\r\n        return ironThroneSuccession[nextIndex];\r\n    };\r\n    GamePhaseService.allRaidOrdersRevealed = function (areas, house) {\r\n        return areas.filter(function (area) {\r\n            return area.orderToken && area.orderToken.isRaidToken() && (house === undefined || house === area.controllingHouse);\r\n        }).length === 0;\r\n    };\r\n    GamePhaseService.isAreaWithUnitsAndToken = function (area) {\r\n        return area.units.length > 0 && area.orderToken != null;\r\n    };\r\n    GamePhaseService.isAreaWithoutUnits = function (area) {\r\n        return area.units.length === 0;\r\n    };\r\n    GamePhaseService.getNextHouseToRecruit = function (state, areaKey) {\r\n        var possibleNextHouse = this.nextHouse(state.ironThroneSuccession, state.currentHouse);\r\n        while (possibleNextHouse !== state.currentHouse) {\r\n            if (this.isAllowedToRecruit(state, possibleNextHouse)) {\r\n                return possibleNextHouse;\r\n            }\r\n            else {\r\n                possibleNextHouse = this.nextHouse(state.ironThroneSuccession, possibleNextHouse);\r\n            }\r\n        }\r\n        if (this.isAllowedToRecruit(state, state.currentHouse, areaKey)) {\r\n            return state.currentHouse;\r\n        }\r\n        return null;\r\n    };\r\n    GamePhaseService.isAllowedToRecruit = function (state, house, areaKey) {\r\n        var areasAllowedToRecruit = StateSelectorService.getAreasAllowedToRecruit(state, house).map(function (area) {\r\n            return area.key;\r\n        });\r\n        var lastIndex = areasAllowedToRecruit.lastIndexOf(areaKey);\r\n        if (lastIndex > 0) {\r\n            areasAllowedToRecruit.slice(lastIndex, 1);\r\n        }\r\n        return areasAllowedToRecruit.length > 0;\r\n    };\r\n    GamePhaseService.isPlanningPhaseComplete = function (areas) {\r\n        var _this = this;\r\n        var completedAreas = areas.filter(function (area) {\r\n            var isAreaWithUnitsAndToken = _this.isAreaWithUnitsAndToken(area);\r\n            var isAreaWithoutUnits = _this.isAreaWithoutUnits(area);\r\n            return isAreaWithUnitsAndToken || isAreaWithoutUnits;\r\n        }).length;\r\n        return completedAreas === areas.length;\r\n    };\r\n    GamePhaseService.getNextGamePhaseWithPendingActions = function (areas, gamePhase) {\r\n        var isStillIn = this.isStillIn(areas, gamePhase);\r\n        if (isStillIn) {\r\n            return gamePhase;\r\n        }\r\n        return this.getNextGamePhaseWithPendingActions(areas, this.getNextGamePhase(gamePhase));\r\n    };\r\n    GamePhaseService.getNextHouseWithPendingActions = function (ironThroneSuccession, areas, gamePhase, lastSourceAreaKey, house) {\r\n        if (this.isStillIn(areas, gamePhase, house)) {\r\n            return house;\r\n        }\r\n        var nextHouse = this.nextHouse(ironThroneSuccession, house);\r\n        return this.getNextHouseWithPendingActions(ironThroneSuccession, areas, gamePhase, lastSourceAreaKey, nextHouse);\r\n    };\r\n    return GamePhaseService;\r\n}());\r\nexport default GamePhaseService;\r\n//# sourceMappingURL=gamePhaseService.js.map","map":{"version":3,"file":"gamePhaseService.js","sourceRoot":"","sources":["gamePhaseService.ts"],"names":[],"mappings":"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"},"dts":{"name":"/Users/taamato1/pdev/got-store/src/logic/gamePhaseService.d.ts","text":"import { GamePhase } from '../model/gamePhase';\r\nimport { House } from '../model/player/house';\r\nimport { AreaKey } from '../model/area/areaKey';\r\nimport Area from '../model/area/area';\r\nimport { GameStoreState } from '../gameStoreState';\r\nexport default class GamePhaseService {\r\n    static getNextPhase(state: GameStoreState, updatedAreas: Area[]): GamePhase;\r\n    static getNextHouse(state: GameStoreState, nextGamePhase: GamePhase, lastSourceAreaKey: AreaKey): any;\r\n    static cleanupBoard(state: GameStoreState): GameStoreState;\r\n    static updateGamePhaseAfterRecruiting(state: GameStoreState, areaKey?: AreaKey): {\r\n        currentHouse: House;\r\n        gamePhase: GamePhase;\r\n    };\r\n    static getNextGamePhase(currentGamePhase: GamePhase): GamePhase;\r\n    private static isStillIn(areas, gamePhase, house?);\r\n    private static allMarchOrdersRevealed(areas, house?);\r\n    private static nextHouse(ironThroneSuccession, house);\r\n    private static allRaidOrdersRevealed(areas, house?);\r\n    private static isAreaWithUnitsAndToken(area);\r\n    private static isAreaWithoutUnits(area);\r\n    private static getNextHouseToRecruit(state, areaKey);\r\n    private static isAllowedToRecruit(state, house, areaKey?);\r\n    private static isPlanningPhaseComplete(areas);\r\n    private static getNextGamePhaseWithPendingActions(areas, gamePhase);\r\n    private static getNextHouseWithPendingActions(ironThroneSuccession, areas, gamePhase, lastSourceAreaKey, house);\r\n}\r\n"}}
