{"code":"import Area from '../../model/area/area';\r\nimport Unit from '../../model/units/units';\r\nimport StateSelectorService from '../../selector/stateSelectorService';\r\nvar AreaStateModificationService = /** @class */ (function () {\r\n    function AreaStateModificationService() {\r\n    }\r\n    AreaStateModificationService.recruitUnits = function (areas, areaKey, unitTypes) {\r\n        var newAreaMap = new Map();\r\n        areas.forEach(function (area) {\r\n            var newArea = area.copy();\r\n            if (newArea.key === areaKey) {\r\n                newArea.orderToken = null;\r\n                unitTypes.forEach(function (unittype) {\r\n                    newArea.units.push(new Unit(unittype, newArea.controllingHouse));\r\n                });\r\n            }\r\n            newAreaMap.set(newArea.key, newArea);\r\n        });\r\n        return newAreaMap;\r\n    };\r\n    AreaStateModificationService.removeAllRemainingTokens = function (areas) {\r\n        var newAreasMap = new Map();\r\n        areas.forEach(function (area) {\r\n            var copyOfArea = area.copy();\r\n            copyOfArea.orderToken = null;\r\n            newAreasMap.set(copyOfArea.key, copyOfArea);\r\n        });\r\n        return newAreasMap;\r\n    };\r\n    AreaStateModificationService.addOrderToken = function (areas, ordertoken, areaKey) {\r\n        var newAreaMap = new Map();\r\n        areas.forEach(function (area) {\r\n            var newArea = area.copy();\r\n            if (newArea.key === areaKey) {\r\n                newArea.orderToken = ordertoken;\r\n            }\r\n            newAreaMap.set(newArea.key, newArea);\r\n        });\r\n        return newAreaMap;\r\n    };\r\n    AreaStateModificationService.removeOrderTokens = function (areas, areaKeys) {\r\n        var newAreaMap = new Map();\r\n        areas.forEach(function (area) {\r\n            var newArea = area.copy();\r\n            if (areaKeys.lastIndexOf(newArea.key) > -1) {\r\n                newArea.orderToken = null;\r\n            }\r\n            newAreaMap.set(newArea.key, newArea);\r\n        });\r\n        return newAreaMap;\r\n    };\r\n    AreaStateModificationService.removeOrderToken = function (areas, areaKey) {\r\n        return this.addOrderToken(areas, null, areaKey);\r\n    };\r\n    AreaStateModificationService.moveUnits = function (areas, source, target, movingUnits, completeOrder, establishControl) {\r\n        var _this = this;\r\n        if (completeOrder === void 0) { completeOrder = true; }\r\n        if (establishControl === void 0) { establishControl = false; }\r\n        var newAreasMap = new Map();\r\n        var foundTarget = false;\r\n        areas.forEach(function (area) {\r\n            var updatedArea;\r\n            if (area.key === source) {\r\n                updatedArea = _this.updateSourceArea(area, movingUnits, completeOrder, establishControl);\r\n                updatedArea ? newAreasMap.set(updatedArea.key, updatedArea) : null;\r\n            }\r\n            else if (area.key === target) {\r\n                foundTarget = true;\r\n                updatedArea = _this.updateTargetArea(area, movingUnits);\r\n            }\r\n            else {\r\n                updatedArea = area.copy();\r\n            }\r\n            updatedArea ? newAreasMap.set(updatedArea.key, updatedArea) : null;\r\n        });\r\n        if (!foundTarget) {\r\n            var newArea = new Area(target, movingUnits[0].getHouse(), movingUnits);\r\n            newAreasMap.set(newArea.key, newArea);\r\n        }\r\n        return newAreasMap;\r\n    };\r\n    AreaStateModificationService.updateSourceArea = function (oldArea, movingUnits, completeOrder, establishControl) {\r\n        if (oldArea.units.length === movingUnits.length && !establishControl) {\r\n            return null;\r\n        }\r\n        var sourceArea = oldArea.copy();\r\n        var remainingUnits = sourceArea.units.filter(function (sourceUnit) {\r\n            return movingUnits.indexOf(sourceUnit) === -1;\r\n        });\r\n        sourceArea.units = remainingUnits;\r\n        if (sourceArea.units.length === 0) {\r\n            sourceArea.controllingHouse = null;\r\n        }\r\n        if (completeOrder) {\r\n            sourceArea.orderToken = null;\r\n        }\r\n        if (completeOrder && establishControl) {\r\n            sourceArea.controllingHouse = oldArea.controllingHouse;\r\n        }\r\n        return sourceArea;\r\n    };\r\n    AreaStateModificationService.updateTargetArea = function (oldArea, movingUnits) {\r\n        var targetArea = oldArea.copy();\r\n        targetArea.units = targetArea.units.concat(movingUnits);\r\n        if (movingUnits.length > 0) {\r\n            targetArea.controllingHouse = movingUnits[0].getHouse();\r\n        }\r\n        return targetArea;\r\n    };\r\n    AreaStateModificationService.updateAfterFight = function (state, areas, attackingAreaKey, winningAreaKey, loosingAreaKey, units) {\r\n        var newAreasMap = new Map();\r\n        areas.forEach(function (area) {\r\n            var newArea = area.copy();\r\n            if (attackingAreaKey === winningAreaKey) {\r\n                var winningArea = StateSelectorService.getAreaByKey(state, winningAreaKey);\r\n                if (newArea.key === winningAreaKey) {\r\n                    newArea.units = [];\r\n                    newArea.orderToken = null;\r\n                    newArea.controllingHouse = winningArea.controllingHouse;\r\n                }\r\n                else if (newArea.key === loosingAreaKey) {\r\n                    newArea.units = units;\r\n                    newArea.orderToken = null;\r\n                    newArea.controllingHouse = winningArea.controllingHouse;\r\n                }\r\n            }\r\n            else if (attackingAreaKey === loosingAreaKey) {\r\n                if (newArea.key === attackingAreaKey) {\r\n                    newArea.units = [];\r\n                    newArea.orderToken = null;\r\n                    newArea.controllingHouse = null;\r\n                }\r\n            }\r\n            newAreasMap.set(newArea.key, newArea);\r\n        });\r\n        return newAreasMap;\r\n    };\r\n    return AreaStateModificationService;\r\n}());\r\nexport default AreaStateModificationService;\r\n//# sourceMappingURL=areaStateModificationService.js.map","map":{"version":3,"file":"areaStateModificationService.js","sourceRoot":"","sources":["areaStateModificationService.ts"],"names":[],"mappings":"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"},"dts":{"name":"/Users/taamato1/pdev/got-store/src/logic/gameState/areaStateModificationService.d.ts","text":"import Area from '../../model/area/area';\r\nimport { AreaKey } from '../../model/area/areaKey';\r\nimport { OrderToken } from '../../model/orderToken/orderToken';\r\nimport Unit from '../../model/units/units';\r\nimport { UnitType } from '../../model/units/unitType';\r\nimport { GameStoreState } from '../../gameStoreState';\r\nexport default class AreaStateModificationService {\r\n    static recruitUnits(areas: Area[], areaKey: AreaKey, unitTypes: UnitType[]): Map<AreaKey, Area>;\r\n    static removeAllRemainingTokens(areas: Area[]): Map<AreaKey, Area>;\r\n    static addOrderToken(areas: Area[], ordertoken: OrderToken, areaKey: AreaKey): Map<AreaKey, Area>;\r\n    static removeOrderTokens(areas: Area[], areaKeys: AreaKey[]): Map<AreaKey, Area>;\r\n    static removeOrderToken(areas: Area[], areaKey: AreaKey): Map<AreaKey, Area>;\r\n    static moveUnits(areas: Area[], source: AreaKey, target: AreaKey, movingUnits: Array<Unit>, completeOrder?: boolean, establishControl?: boolean): Map<AreaKey, Area>;\r\n    private static updateSourceArea(oldArea, movingUnits, completeOrder, establishControl);\r\n    private static updateTargetArea(oldArea, movingUnits);\r\n    static updateAfterFight(state: GameStoreState, areas: Area[], attackingAreaKey: AreaKey, winningAreaKey: AreaKey, loosingAreaKey: AreaKey, units: Array<Unit>): Map<AreaKey, Area>;\r\n}\r\n"}}
