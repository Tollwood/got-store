{"code":"import * as tslib_1 from \"tslib\";\r\nimport { createStore } from 'redux';\r\nimport { TypeKeys } from './actions';\r\nimport VictoryRules from './logic/victoryRules';\r\nimport GamePhaseService from './logic/gamePhaseService';\r\nimport RecruitingStateModificationService from './logic/gameState/recruitingStateModificationService';\r\nimport AreaModificationService from './logic/gameState/areaStateModificationService';\r\nimport PlayerStateModificationService from './logic/gameState/playerStateModificationService';\r\nimport WildlingStateModificationService from './logic/gameState/wildlingStateModificationService';\r\nimport GameStateModificationService from './logic/gameState/gameStateModificationService';\r\nimport WesterosCardRules from './logic/cards/westerosCardRules';\r\nimport { CardAbilities } from './logic/cards/cardAbilities';\r\nvar gameStateReducer = function (state, action) {\r\n    if (state === void 0) { state = {}; }\r\n    var newState;\r\n    switch (action.type) {\r\n        case TypeKeys.NEW_GAME:\r\n            newState = tslib_1.__assign({}, GameStateModificationService.init(action.playerSetup));\r\n            break;\r\n        case TypeKeys.LOAD_GAME:\r\n            newState = tslib_1.__assign({}, action.state);\r\n            break;\r\n        case TypeKeys.RECRUIT_UNITS:\r\n            var areasAllowedToRecruit = RecruitingStateModificationService.updateAreasAllowedToRecruit(state.areasAllowedToRecruit, action.areaKey);\r\n            var currentWesterosCard = areasAllowedToRecruit.length > 0 ? state.currentWesterosCard : null;\r\n            newState = tslib_1.__assign({}, state, { areas: AreaModificationService.recruitUnits(Array.from(state.areas.values()), action.areaKey, action.units), areasAllowedToRecruit: areasAllowedToRecruit,\r\n                currentWesterosCard: currentWesterosCard }, GamePhaseService.updateGamePhaseAfterRecruiting(state, action.areaKey));\r\n            break;\r\n        case TypeKeys.PLACE_ORDER:\r\n            var areasAfterPlacingOrder = AreaModificationService.addOrderToken(Array.from(state.areas.values()), action.orderToken, action.areaKey);\r\n            var nextGamePhase = GamePhaseService.getNextPhase(state, Array.from(areasAfterPlacingOrder.values()));\r\n            newState = tslib_1.__assign({}, state, { areas: areasAfterPlacingOrder, gamePhase: nextGamePhase, currentHouse: GamePhaseService.getNextHouse(state, nextGamePhase, action.areaKey) });\r\n            break;\r\n        case TypeKeys.SKIP_ORDER:\r\n            var areasAfterSkippingOrder = AreaModificationService.removeOrderToken(Array.from(state.areas.values()), action.areaKey);\r\n            nextGamePhase = GamePhaseService.getNextPhase(state, Array.from(areasAfterSkippingOrder.values()));\r\n            newState = tslib_1.__assign({}, state, { areas: areasAfterSkippingOrder, gamePhase: nextGamePhase, currentHouse: GamePhaseService.getNextHouse(state, nextGamePhase, action.areaKey) });\r\n            break;\r\n        case TypeKeys.EXECUTE_RAID_ORDER:\r\n            var areasAfterExecutingRaidOrder = AreaModificationService.removeOrderTokens(Array.from(state.areas.values()), [action.sourceAreaKey,\r\n                action.targetAreaKey]);\r\n            var playersAfterRaidOrder = PlayerStateModificationService.raidPowerToken(state, action.sourceAreaKey, action.targetAreaKey);\r\n            nextGamePhase = GamePhaseService.getNextPhase(state, Array.from(areasAfterExecutingRaidOrder.values()));\r\n            newState = tslib_1.__assign({}, state, { areas: areasAfterExecutingRaidOrder, players: playersAfterRaidOrder, gamePhase: nextGamePhase, currentHouse: GamePhaseService.getNextHouse(state, nextGamePhase, action.sourceAreaKey) });\r\n            break;\r\n        case TypeKeys.PLAY_WESTEROS_CARD:\r\n            newState = tslib_1.__assign({}, state, { currentWesterosCard: WesterosCardRules.getNextCard(state), westerosCards: WesterosCardRules.shiftCardOnCurrentStack(state) });\r\n            break;\r\n        case TypeKeys.EXECUTE_WESTEROS_CARD:\r\n            newState = tslib_1.__assign({}, CardAbilities[action.card.selectedFunction.functionName](state), { wildlingsCount: WildlingStateModificationService.updateWildlingCount(state.wildlingsCount, action.card.wildling) });\r\n            break;\r\n        case TypeKeys.MOVE_UNITS:\r\n            var winningHouse = VictoryRules.verifyWinningHouseAfterMove(state, state.areas.get(action.source).controllingHouse, action.target);\r\n            var areasAfterMove = AreaModificationService.moveUnits(Array.from(state.areas.values()), action.source, action.target, action.units, action.completeOrder, action.establishControl);\r\n            var playersAfterMove = PlayerStateModificationService.establishControl(state.players, action.establishControl, state.areas.get(action.source).controllingHouse);\r\n            nextGamePhase = GamePhaseService.getNextPhase(state, Array.from(areasAfterMove.values()));\r\n            newState = tslib_1.__assign({}, state, { areas: areasAfterMove, players: playersAfterMove, gamePhase: nextGamePhase, currentHouse: GamePhaseService.getNextHouse(state, nextGamePhase, action.source), winningHouse: winningHouse });\r\n            break;\r\n        case TypeKeys.RESOLVE_FIGHT:\r\n            // TODO verify winning conditions\r\n            var combatResult = action.combatResult;\r\n            var loosingArea = combatResult.looser === combatResult.attackingArea.controllingHouse ? combatResult.attackingArea : combatResult.defendingArea;\r\n            var winningArea = combatResult.winner === combatResult.attackingArea.controllingHouse ? combatResult.attackingArea : combatResult.defendingArea;\r\n            newState = tslib_1.__assign({}, state, { areas: AreaModificationService.updateAfterFight(state, Array.from(state.areas.values()), combatResult.attackingArea.key, winningArea.key, loosingArea.key, winningArea.units) });\r\n            break;\r\n        default:\r\n            newState = state;\r\n            break;\r\n    }\r\n    var nextState = GamePhaseService.cleanupBoard(newState);\r\n    // console.log({action, oldState: nextState, nextState, newState: newState});\r\n    return nextState;\r\n};\r\nvar GameStoreFactory = /** @class */ (function () {\r\n    function GameStoreFactory() {\r\n    }\r\n    GameStoreFactory.create = function () {\r\n        return createStore(gameStateReducer);\r\n    };\r\n    return GameStoreFactory;\r\n}());\r\nexport { GameStoreFactory };\r\n//# sourceMappingURL=reducer.js.map","map":{"version":3,"file":"reducer.js","sourceRoot":"","sources":["reducer.ts"],"names":[],"mappings":"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"},"dts":{"name":"/Users/taamato1/pdev/got-store/src/reducer.d.ts","text":"import { Store } from 'redux';\r\nimport { GameStoreState } from './gameStoreState';\r\ndeclare class GameStoreFactory {\r\n    static create(): Store<GameStoreState>;\r\n}\r\nexport { GameStoreFactory };\r\n"}}
