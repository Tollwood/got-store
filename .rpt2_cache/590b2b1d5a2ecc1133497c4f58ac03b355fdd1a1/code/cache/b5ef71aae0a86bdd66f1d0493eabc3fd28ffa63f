{"code":"import * as tslib_1 from \"tslib\";\r\nimport { OrderTokenType } from './../../model/orderToken/orderTokenType';\r\nimport PlayerStateModificationService from '../gameState/playerStateModificationService';\r\nimport SupplyStateModificationService from '../gameState/supplyStateModificationService';\r\nimport RecruitingStateModificationService from '../gameState/recruitingStateModificationService';\r\nimport GamePhaseService from '../gamePhaseService';\r\nimport CardFactory from '../cards/cardFactory';\r\nvar CardAbilities = /** @class */ (function () {\r\n    function CardAbilities() {\r\n    }\r\n    CardAbilities.shuffleCards = function (state) {\r\n        var cards = state.westerosCards.get(state.currentWesterosCard.gamePhase).slice();\r\n        CardFactory.shuffle(cards);\r\n        var newState = tslib_1.__assign({}, state, { currentWesterosCard: null });\r\n        newState.westerosCards.set(state.currentWesterosCard.gamePhase, cards);\r\n        return newState;\r\n    };\r\n    CardAbilities.supply = function (state) {\r\n        return tslib_1.__assign({}, state, { currentlyAllowedSupply: SupplyStateModificationService.updateSupply(state), currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.recruit = function (state) {\r\n        var stateWithUnitsAllowedToRecruit = tslib_1.__assign({}, state, { areasAllowedToRecruit: RecruitingStateModificationService.calculateAreasAllowedToRecruit(state) });\r\n        return tslib_1.__assign({}, stateWithUnitsAllowedToRecruit, GamePhaseService.updateGamePhaseAfterRecruiting(stateWithUnitsAllowedToRecruit));\r\n    };\r\n    CardAbilities.nothing = function (state) {\r\n        return tslib_1.__assign({}, state, { currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.invluence = function (state) {\r\n        return tslib_1.__assign({}, state, { currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.power = function (state) {\r\n        return tslib_1.__assign({}, state, { players: PlayerStateModificationService.consolidateAllPower(state), currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.noDefenseOrders = function (state) {\r\n        var restrictedTokenTypes = [OrderTokenType.defend_0, OrderTokenType.defend_1, OrderTokenType.defend_special];\r\n        var currentlyAllowedTokenTypes = state.currentlyAllowedTokenTypes\r\n            .filter(function (orderToken) { return restrictedTokenTypes.indexOf(orderToken) === -1; });\r\n        return tslib_1.__assign({}, state, { currentlyAllowedTokenTypes: currentlyAllowedTokenTypes, currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.noSpecialMarchOrder = function (state) {\r\n        var restrictedTokenTypes = [OrderTokenType.march_special];\r\n        var currentlyAllowedTokenTypes = state.currentlyAllowedTokenTypes\r\n            .filter(function (orderToken) { return restrictedTokenTypes.indexOf(orderToken) === -1; });\r\n        return tslib_1.__assign({}, state, { currentlyAllowedTokenTypes: currentlyAllowedTokenTypes, currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.noRaidOrders = function (state) {\r\n        var restrictedTokenTypes = [OrderTokenType.raid_0, OrderTokenType.raid_1, OrderTokenType.raid_special];\r\n        var currentlyAllowedTokenTypes = state.currentlyAllowedTokenTypes\r\n            .filter(function (orderToken) { return restrictedTokenTypes.indexOf(orderToken) === -1; });\r\n        return tslib_1.__assign({}, state, { currentlyAllowedTokenTypes: currentlyAllowedTokenTypes, currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.noConsolidatePowerOrders = function (state) {\r\n        var restrictedTokenTypes = [OrderTokenType.consolidatePower_0, OrderTokenType.consolidatePower_1, OrderTokenType.consolidatePower_special];\r\n        var currentlyAllowedTokenTypes = state.currentlyAllowedTokenTypes\r\n            .filter(function (orderToken) { return restrictedTokenTypes.indexOf(orderToken) === -1; });\r\n        return tslib_1.__assign({}, state, { currentlyAllowedTokenTypes: currentlyAllowedTokenTypes, currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.noSupportOrders = function (state) {\r\n        var restrictedTokenTypes = [OrderTokenType.support_0, OrderTokenType.support_1, OrderTokenType.support_special];\r\n        var currentlyAllowedTokenTypes = state.currentlyAllowedTokenTypes\r\n            .filter(function (orderToken) { return restrictedTokenTypes.indexOf(orderToken) === -1; });\r\n        return tslib_1.__assign({}, state, { currentlyAllowedTokenTypes: currentlyAllowedTokenTypes, currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    CardAbilities.wildlingAttack = function (state) {\r\n        return tslib_1.__assign({}, state, { currentWesterosCard: null, gamePhase: GamePhaseService.getNextGamePhase(state.gamePhase) });\r\n    };\r\n    return CardAbilities;\r\n}());\r\nexport { CardAbilities };\r\n//# sourceMappingURL=cardAbilities.js.map","map":{"version":3,"file":"cardAbilities.js","sourceRoot":"","sources":["cardAbilities.ts"],"names":[],"mappings":"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"},"dts":{"name":"/Users/taamato1/pdev/got-store/src/logic/cards/cardAbilities.d.ts","text":"import { GameStoreState } from './../../gameStoreState';\r\nexport declare class CardAbilities {\r\n    static shuffleCards(state: GameStoreState): GameStoreState;\r\n    static supply(state: GameStoreState): GameStoreState;\r\n    static recruit(state: GameStoreState): GameStoreState;\r\n    static nothing(state: GameStoreState): GameStoreState;\r\n    static invluence(state: GameStoreState): GameStoreState;\r\n    static power(state: GameStoreState): GameStoreState;\r\n    static noDefenseOrders(state: GameStoreState): GameStoreState;\r\n    static noSpecialMarchOrder(state: GameStoreState): GameStoreState;\r\n    static noRaidOrders(state: GameStoreState): GameStoreState;\r\n    static noConsolidatePowerOrders(state: GameStoreState): GameStoreState;\r\n    static noSupportOrders(state: GameStoreState): GameStoreState;\r\n    static wildlingAttack(state: GameStoreState): GameStoreState;\r\n}\r\n"}}
