{"code":"import { AreaStatsService } from './area/areaStatsService';\r\nvar VictoryRules = /** @class */ (function () {\r\n    function VictoryRules() {\r\n    }\r\n    VictoryRules.getVictoryPositionFor = function (state, house) {\r\n        return Array.from(state.areas.values()).filter(function (area) {\r\n            return area.controllingHouse === house && AreaStatsService.getInstance().areaStats.get(area.key).hasCastleOrStronghold();\r\n        }).length;\r\n    };\r\n    VictoryRules.getWinningHouse = function (state) {\r\n        var winningHouse = null;\r\n        var nextGameRound = state.gameRound + 1;\r\n        if (nextGameRound > 10) {\r\n            var sortedPlayersByVictoryPoints = state.players.sort(function (a, b) {\r\n                return VictoryRules.getVictoryPositionFor(state, b.house) - VictoryRules.getVictoryPositionFor(state, a.house);\r\n            });\r\n            winningHouse = sortedPlayersByVictoryPoints[0].house;\r\n        }\r\n        return winningHouse;\r\n    };\r\n    VictoryRules.verifyWinningHouseAfterMove = function (state, house, targetAreaKey) {\r\n        var winningHouse = null;\r\n        var victoryPosition = this.getVictoryPositionFor(state, house);\r\n        var targetAreaHasStronghold = AreaStatsService.getInstance().areaStats.get(targetAreaKey).hasCastleOrStronghold();\r\n        if (victoryPosition === 6 && targetAreaHasStronghold) {\r\n            winningHouse = house;\r\n        }\r\n        return winningHouse;\r\n    };\r\n    return VictoryRules;\r\n}());\r\nexport default VictoryRules;\r\n//# sourceMappingURL=victoryRules.js.map","map":{"version":3,"file":"victoryRules.js","sourceRoot":"","sources":["victoryRules.ts"],"names":[],"mappings":"AAIA,OAAO,EAAC,gBAAgB,EAAC,MAAM,yBAAyB,CAAC;AAEzD;IAAA;IA6BA,CAAC;IA3BiB,kCAAqB,GAAnC,UAAoC,KAAqB,EAAE,KAAY;QACnE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,UAAC,IAAU;YACtD,MAAM,CAAC,IAAI,CAAC,gBAAgB,KAAK,KAAK,IAAI,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,CAAC;QAC7H,CAAC,CAAC,CAAC,MAAM,CAAC;IACd,CAAC;IAEa,4BAAe,GAA7B,UAA8B,KAAqB;QAC/C,IAAI,YAAY,GAAU,IAAI,CAAC;QAC/B,IAAM,aAAa,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC,CAAC;YACrB,IAAM,4BAA4B,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;gBACzD,MAAM,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;YACnH,CAAC,CAAC,CAAC;YACH,YAAY,GAAG,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,YAAY,CAAC;IACxB,CAAC;IAEa,wCAA2B,GAAzC,UAA0C,KAAqB,EAAE,KAAY,EAAE,aAAuB;QAClG,IAAI,YAAY,GAAU,IAAI,CAAC;QAC/B,IAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACjE,IAAM,uBAAuB,GAAG,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,qBAAqB,EAAE,CAAC;QACpH,EAAE,CAAC,CAAC,eAAe,KAAK,CAAC,IAAI,uBAAuB,CAAC,CAAC,CAAC;YACnD,YAAY,GAAG,KAAK,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,YAAY,CAAC;IACxB,CAAC;IACL,mBAAC;AAAD,CAAC,AA7BD,IA6BC"},"dts":{"name":"/Users/taamato1/pdev/got-store/src/logic/victoryRules.d.ts","text":"import { House } from '../model/player/house';\r\nimport { AreaKey } from '../model/area/areaKey';\r\nimport { GameStoreState } from '../gameStoreState';\r\nexport default class VictoryRules {\r\n    static getVictoryPositionFor(state: GameStoreState, house: House): number;\r\n    static getWinningHouse(state: GameStoreState): House;\r\n    static verifyWinningHouseAfterMove(state: GameStoreState, house: House, targetAreaKey?: AreaKey): House;\r\n}\r\n"}}
